import QtQuick 2.7
import QtQuick.Controls 2.2
import QtQuick.Layouts 1.1
import QtQuick.Controls.Material 2.0
import QtQuick.Controls 1.4
import QtQuick.Dialogs 1.2
import io.qt.examples.WrapperFunctions 1.0
import "parameters.js" as Dataparameters


Page {


    id: page1
    visible:true
    property variant parameters:[]
    property string fileURLForComputation: ""

    ToolBar {


        id:toolbarPage1
        anchors.right: parent.right
        anchors.left: parent.left
        RowLayout {
            ToolButton {
                text: qsTr("File")
                onClicked: {fileMenu.popup()}

                Menu {
                    id: fileMenu
                    title: "File"
                    MenuItem {
                        text: "Open STL File"

                        onTriggered:
                        {
                            fileDialog.open()
                        }
                    }

                    MenuItem {
                        text: "Open Compute File"

                        onTriggered:
                        {
                            fileDialogForComputation.open()
                        }
                    }
                    MenuItem { text: "Quit"
                        onTriggered: Qt.quit()
                    }
                }
            }
            ToolButton {
                text: qsTr("Edit")

            }
            ToolButton {
                text: qsTr("View")
            }


            ToolButton {
                text: qsTr("Project")
            }

            ToolButton {
                text: qsTr("Settings")
            }

            ToolButton {
                text: qsTr("Help")
            }
        }
    }

    ToolBar {

        id:toolbarScene
        x:leftItem.width
        width: (4*parent.width)/5

        anchors.right: parent.right
        //anchors.left: leftItem.right
        anchors.top:toolbarPage1.bottom
        //anchors.bottom:centerItem.bottom


        RowLayout {

            MyToolbarButton
            {
                id: bttnRot
                iconSource: "qrc:///images/objRotate-50.png"


            }
            MyToolbarButton
            {
                id: bttnTrans
                iconSource: "qrc:///images/objPan-50.png"


            }

        }
    }
    ColumnLayout
    {
        anchors.fill: parent


        Item
        {
            id: leftItem
            y:toolbarPage1.height
            width: parent.width/5
            height: parent.height


            Rectangle
            {

                anchors.fill: parent
                color: Qt.lighter("gray",0)

                Label
                {
                    anchors.top: parent.top
                    text: "Inspector"
                    y:0
                    width: parent.width
                    horizontalAlignment: "AlignHCenter"
                    height: 20
                    color: Qt.lighter("white")

                }

                TabView {

                    id: leftTabTop
                    y:20

                    height: parent.height * 0.4
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.bottom: leftTabDown.top

                    Tab {
                        title: "Laminar"
                        Rectangle {
                            color: Qt.lighter("gray")

                            ScrollView {
                                width: parent.width
                                height: parent.height

                                Grid
                                {
                                    columns: 2
                                    anchors.fill: parent
                                    leftPadding: 20
                                    topPadding: 20
                                    columnSpacing: 5
                                    Label {
                                        text: "LX0"

                                    }
                                    SpinBox {
                                        id: spinPar1
                                        value: 3
                                        width: 120
                                        stepSize: 1
                                        Layout.fillWidth: true
                                    }

                                    Label {
                                        text: "LY0"
                                    }
                                    SpinBox {
                                        id: spinPar2
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "LY0"
                                    }
                                    SpinBox {
                                        id: spinPar3
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }

                                    Label {
                                        text: "LY1"
                                    }
                                    SpinBox {
                                        id: spinPar4
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "N"
                                    }
                                    SpinBox {
                                        id: spinPar5
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "M"
                                    }
                                    SpinBox {
                                        id: spinPar6
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true

                                    }

                                    Label {
                                        text: "Max Sim Time"
                                    }
                                    SpinBox {
                                        id: spinPar7
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }

                                    Button {
                                        text: "Reset"

                                        onClicked:
                                        {
                                            spinPar1.value = 5.0
                                            spinPar2.value = 0.75
                                            spinPar3.value = 20.0
                                            spinPar4.value = 1.5
                                            spinPar5.value = 50
                                            spinPar6.value = 60
                                            spinPar7.value = 40

                                        }
                                    }

                                    Button {
                                        text: "Start Process"

                                        onClicked:
                                        {
                                            parameters[0] = spinPar1.value
                                            parameters[1] = spinPar2.value
                                            parameters[2] = spinPar3.value
                                            parameters[3] = spinPar4.value
                                            parameters[4] = spinPar5.value
                                            parameters[5] = spinPar6.value
                                            parameters[6] = spinPar7.value

                                            console.log("filename = " + Dataparameters.filename[0]);
                                            wrapperCpp.handleFileChosen(fileDialogForComputation.fileUrl)
                                            var s = wrapperCpp.getFileName()
                                            wrapperCpp.getparameters(parameters,"./" + s)
                                            wrapperCpp.executeMakeFile()



                                        }
                                    }
                                }
                            }

                        }
                    }

                    Tab {
                        title: "Particles"
                        Rectangle {
                            color: Qt.lighter("gray")

                            ScrollView {
                                width: parent.width
                                height: parent.height

                                Grid
                                {
                                    columns: 2
                                    anchors.fill: parent
                                    leftPadding: 20
                                    topPadding: 20
                                    columnSpacing: 5
                                    Label {
                                        text: "Re"

                                    }
                                    SpinBox {
                                        id: spinPar8
                                        value: 3
                                        width: 120
                                        stepSize: 1
                                        Layout.fillWidth: true
                                    }

                                    Label {
                                        text: "N"
                                    }
                                    SpinBox {
                                        id: spinPar9
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "iTperiod"
                                    }
                                    SpinBox {
                                        id: spinPar10
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }

                                    Label {
                                        text: "diffusion"
                                    }
                                    SpinBox {
                                        id: spinPar11
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "radius"
                                    }
                                    SpinBox {
                                        id: spinPar12
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }


                                    Label {
                                        text: "partRho"
                                    }
                                    SpinBox {
                                        id: spinPar13
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true

                                    }

                                    Label {
                                        text: "Max Sim Time"
                                    }
                                    SpinBox {
                                        id: spinPar14
                                        value: 3
                                        width: 120
                                        Layout.fillWidth: true
                                    }

                                    Button {
                                        text: "Reset"

                                        onClicked:
                                        {
                                            spinPar8.value = 50.0
                                            spinPar9.value = 19.0
                                            spinPar10.value = 100.0
                                            spinPar11.value = 1.e-6
                                            spinPar12.value = 1.5e-04
                                            spinPar13.value = 998.0
                                            spinPar14.value = 10

                                        }
                                    }

                                    Button {
                                        text: "Start Process"

                                        onClicked:
                                        {
                                            parameters[0] = spinPar8.value
                                            parameters[1] = spinPar9.value
                                            parameters[2] = spinPar10.value
                                            parameters[3] = spinPar11.value
                                            parameters[4] = spinPar12.value
                                            parameters[5] = spinPar13.value
                                            parameters[6] = spinPar14.value

                                            wrapperCpp.handleFileChosen(fileDialogForComputation.folder)
                                            wrapperCpp.getparameters(parameters,"./bifurcation3d")
                                            wrapperCpp.executeMakeFile()

                                        }
                                    }
                                }
                            }

                        }
                    }




                }

                TabView {

                    id: leftTabDown
                    y:300
                    height: parent.height * 0.5
                    anchors.left: parent.left
                    anchors.right: parent.right


                    Tab {
                        title: "Controls"
                        Rectangle { color: Qt.lighter("gray") }
                    }
                    Tab {
                        title: "Settings"
                        Rectangle { color: Qt.lighter("gray") }
                    }

                }


            }


        }
        Item
        {
            id:centerItem
            x:leftItem.width
            y:toolbarPage1.height+toolbarScene.height
            width: (4*parent.width)/5
            height: (3.5*parent.height)/5
            anchors.right: parent.right
            Rectangle
            {
                anchors.fill: parent
                color: Qt.lighter("black")

                Scene
                {
                    id: scene3d
                    property int mouseXCur: 100
                    property int mouseYCur: 100

                }

                MouseArea
                {
                    anchors.fill: parent

                    onPositionChanged:
                    {
                        if(bttnRot.checked)
                        {
                            if(scene3d.mouseXCur > mouseX)
                                scene3d.rotX = scene3d.rotX + 1
                            else
                                scene3d.rotX = scene3d.rotX - 1

                            scene3d.mouseXCur = mouseX


                            if(scene3d.mouseYCur > mouseY)
                                scene3d.rotY = scene3d.rotY + 1
                            else
                                scene3d.rotY = scene3d.rotY - 1
                            scene3d.mouseYCur = mouseY
                        }

                        if(bttnTrans.checked)
                        {
                            if(scene3d.mouseXCur > mouseX)
                                scene3d.tranX = scene3d.tranX + 50
                            else
                                scene3d.tranX = scene3d.tranX - 50

                            console.log("translate X = " + scene3d.tranX)
                            scene3d.mouseXCur = mouseX


                            if(scene3d.mouseYCur > mouseY)
                                scene3d.tranY = scene3d.tranY + 1
                            else
                                scene3d.tranY = scene3d.tranY - 1
                            scene3d.mouseYCur = mouseY
                        }

                    }


                }


            }



        }

        Item
        {
            id: centerBottomItem
            x:leftItem.width
            y:toolbarPage1.height+toolbarScene.height+centerItem.height
            width: (4*parent.width)/5
            height: parent.height-toolbarScene.height-centerItem.height-toolbarPage1.height
            anchors.right: parent.right
            Rectangle
            {
                anchors.fill: parent
                border.color: "black"
                border.width: 2
            }

            Item
            {
                id: consoleCenterBottomItem
                x:0
                y:0
                width: parent.width
                height: parent.height/5

                Rectangle
                {
                    anchors.fill: parent

                    border.color: "gray"
                    border.width: 2
                }

                Row
                {
                    Label
                    {

                        height: 20
                        text: qsTr("Console")
                        width: 100

                    }

                    Button
                    {
                        id: consoleClear
                        height: 20
                        text: qsTr("Clear")

                        onClicked: consoleText.text = ""
                    }

                    Button
                    {
                        id: consoleStopProcess
                        height: 20
                        text: qsTr("Stop")

                        onClicked: {
                            wrapperCpp.stopProcessing()
                            consoleText.text = "Stopping Process...."}
                    }

                }

            }


            TextArea {
                id: consoleText
                x:0
                y:consoleCenterBottomItem.height
                width: parent.width
                height: 4*parent.height/5
                text: "Select File..........."
                font.pixelSize: 10
                ScrollView
                {
                    anchors.fill: parent
                }
            }




        }

        /*
        Item
        {
            id:rightItem
            x:centerItem.width + leftItem.width
            y:toolbarPage1.height
            width: parent.width/5
            height: parent.height


            Rectangle
            {

                anchors.fill: parent
                color: Qt.lighter("gray",0)


                Label
                {
                    anchors.top: parent.top
                    id: rightLabel
                    text: "Inspector"
                    y:0
                    width: parent.width
                    horizontalAlignment: "AlignHCenter"
                    height: 20
                    color: Qt.lighter("white")
                }

                TabView {

                    y:20
                    height: parent.height - 20
                    anchors.left: parent.left
                    anchors.right: parent.right

                    Tab {
                        title: "Information"
                        Rectangle { color: Qt.lighter("gray") }
                    }
                    Tab {
                        title: "Properties"
                        Rectangle { color: Qt.lighter("gray") }
                    }

                }



            }


        }

        */
    }

    FileDialog
    {
        id: fileDialog
        onAccepted:
        {
            scene3d.sceneLoaderSource = fileDialog.fileUrl
        }
    }

    FileDialog
    {
        id: fileDialogForComputation
        nameFilters: ["Cpp files (*.cpp)"]
        onAccepted:
        {
            fileURLForComputation = fileDialogForComputation.fileUrl

        }
    }

    WrapperFunctions
    {
        id: wrapperCpp

        onConsoleTextChanged:
        {
            setConsoleText(text)
        }
    }
    function isButtonChecked(buttonID)
    {
        if(buttonID.checked)
        {
            return true
        }
        else
        {
            return false
        }
    }

    function setConsoleText(text){
        console.log("setTextField: " + text)
        consoleText.append(text)
    }


}
